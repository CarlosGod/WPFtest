#define FILE_DIR "webapps\\xxbs\\WEB-INF\\classes"
#define FILE_NAME  "application.properties"
#define TITLE_TEXT   "GetLine example"

#define DBServer "trs.host"
#define DBUser "trs.userName"
#define DBPwd "trs.password"



prototype BOOL OrcalConnTest(STRING,STRING,STRING,BYREF STRING);
prototype BOOL SqlServerConnTest(STRING,STRING,STRING,BYREF STRING);


function BOOL OrcalConnTest(svIP,svUser,svPwd,szErrow)

	OBJECT pADOConnObj,pADORecordSetObjID,pDBConObj;
	 STRING szADOConnObjID,szADORecordSetObjID,szConnString,szSQL,svDirver;
	 BOOL bExits;
	
begin
	 svDirver="Microsoft ODBC for Oracle";
	 bExits=FALSE;
	 try
	 szADOConnObjID="ADODB.Connection";
	 set pADOConnObj=CreateObject(szADOConnObjID);
	 szConnString="driver={"+svDirver+"};";
	 szConnString=szConnString+"Server="+svIP+";";
	 szConnString =szConnString+"Uid="+svUser+";";
	 szConnString=szConnString+"Pwd="+svPwd+";";
	 MessageBox(szConnString,WARNING);
	 pADOConnObj.Open(szConnString);
	 bExits=TRUE;
	 catch
	 Sprintf(szErrow,"error:Number:%d;",Err.Number);
	 szErrow=szErrow+"Desc:"+Err.Description;
	 set pADOConnObj=NOTHING;
	 endcatch;
	 set pADOConnObj=NOTHING;
	 return bExits;
end;


function BOOL SqlServerConnTest(svIP,svUser,svPwd,szErrow)

	OBJECT pADOConnObj,pADORecordSetObjID,pDBConObj;
	 STRING szADOConnObjID,szADORecordSetObjID,szConnString,szSQL,svDirver;
	 BOOL bExits;
	
begin
	 svDirver="Microsoft ODBC for SQL SERVER";
	 bExits=FALSE;
	 try
	 szADOConnObjID="ADODB.Connection";
	 set pADOConnObj=CreateObject(szADOConnObjID);
	 szConnString="Provider=SQLOLEDB.1;Password="+svPwd+";Persist Security Info=TRUE;User ID=";
	 szConnString=szConnString+svUser+";Initial Catalog=master;Data Source="+svIP;
	 MessageBox(szConnString,WARNING);
	 pADOConnObj.Open(szConnString);
	 bExits=TRUE;
	 catch
	 Sprintf(szErrow,"error:Number:%d;",Err.Number);
	 szErrow=szErrow+"Desc:"+Err.Description;
	 set pADOConnObj=NOTHING;
	 endcatch;
	 set pADOConnObj=NOTHING;
	 return bExits;
end;


prototype ExeMySqlScript(STRING,STRING,STRING,STRING);
function ExeMySqlScript(szServer,szUser,szPassword,szComponent)
	NUMBER nResult;
	STRING sCMD,sOPT,sResult,sResult2,svLine,sMsg,sPath;
	NUMBER nvFileHandle,nvCount;
	LIST listStatus;
begin
	 sMsg = "安装"+szComponent+" ...";
    SdShowMsg(sMsg, TRUE);
    // source命令不认识windows路径中的反斜杠，故将SRCDIR中的反斜杠替换成斜杠
    sPath = SRCDIR;
    StrReplace(sPath, "//", "/", 0);
    // Fetch database connection information
   /* SQLRTGetConnectionInfo( "mysql", szServer,"mm,mn", szUser, szPassword );*/
    sCMD = WINSYSDIR^"cmd.exe";
    sOPT = "/c "+SRCDIR^"mysql.exe -h "+szServer+"-u "+szUser+" -p "+szPassword;
    sOPT = sOPT+"-e 'source "+sPath^szComponent+".sql' > "+SRCDIR^"dbstatus.txt 2>&1";
    // Execute the script associated with the given component in database
    nResult=LaunchAppAndWait(sCMD, sOPT, WAIT|LAAW_OPTION_HIDDEN);
    if (nResult < 0) then
        MessageBox("Failed installing "+szComponent+" !", SEVERE);
        abort;
    endif;
    // 关闭安装提示
    SdShowMsg("" ,FALSE);
    // Read dbstatus.txt
    OpenFileMode(FILE_MODE_NORMAL);
    if (OpenFile(nvFileHandle, SRCDIR, "dbstatus.txt")<0) then
        MessageBox("Failed checking the status of installing "+szComponent+" !", SEVERE);
        abort;
    endif;
    listStatus = ListCreate(STRINGLIST);
    while GetLine(nvFileHandle, svLine) = 0
        ListAddString(listStatus, svLine, AFTER);
    endwhile;
    CloseFile(nvFileHandle);
    // Count how many lines fetched from dbstatus.txt
    nvCount = ListCount(listStatus);
    if nvCount > 0 then
        sMsg = "更新数据库出错，点“是”打开日志文件并退出安装，点“否”直接退出安装。/n";
        sMsg = sMsg+"若错误可忽略，可选择数据库类型“none”以跳过数据库更新并直接更新程序，/n";
        sMsg = sMsg+"然后在数据库中手工执行SQL脚本（安装后保存在script目录下）";
        nResult = AskYesNo(sMsg, YES);
        if (nResult = YES) then
            LaunchApp(WINSYSDIR^"notepad.exe", SRCDIR^"dbstatus.txt");
	endif;                   
        abort;
    endif;
end;


prototype ExeOracleScript(STRING,STRING,STRING,STRING);
function ExeOracleScript(szServer,szUser,szPassword,szComponent)  
    NUMBER nResult,nvFileHandle,nIndex,nvCount;
    STRING sMsg,sCMD,sOPT,sInstance,sTmp,svLine;
    LIST listStatus;
begin
    sMsg = "安装"+szComponent+" ...";
    SdShowMsg(sMsg, TRUE);
    // Fetch database connection information
    /*SQLRTGetConnectionInfo( "oracle", szServer, szDB, szUser, szPassword );*/
   /* nIndex = StrFind(szServer, ":");
    nIndex = StrFindEx(szServer, ‘/‘, nIndex);
    StrSub(sInstance, szServer, nIndex+1, 100);*/
    sCMD = WINSYSDIR^"cmd.exe";
    sOPT = " /c "+"sqlplus.exe -L -S "+szUser+"/"+szPassword+"@"+szServer+"/";
    sOPT = sOPT+" @"+SRCDIR^szComponent+".sql > "+SRCDIR^"dbstatus.txt 2>&1";
    // Execute the script associated with the given component in database
    nResult=LaunchAppAndWait(sCMD, sOPT, WAIT|LAAW_OPTION_HIDDEN);
    if (nResult < 0) then
        MessageBox("Failed installing "+szComponent+" !", SEVERE);
        abort;
    endif;               
    // 关闭安装提示
    SdShowMsg("", FALSE);
    // 在dbstatus.txt中查询字符串holytail，如果存在，说明脚本已执行完
    if (FileGrep(SRCDIR^"dbstatus.txt", "holytail", svLine, nIndex, RESTART) = 0) then
        // 在dbstatus.txt中查询字符串ORA-，如果存在，说明脚本执行出现错误
        if (FileGrep(SRCDIR^"dbstatus.txt", "ORA-", svLine, nIndex, RESTART) = 0) then
            sMsg = "更新数据库出错，点“是”打开日志文件并退出安装，点“否”直接退出安装。/n";
            sMsg = sMsg+"若错误可忽略，可选择数据库类型“none”以跳过数据库更新并直接更新程序，/n";
            sMsg = sMsg+"然后在数据库中手工执行SQL脚本（安装后保存在script目录下）";
            nResult = AskYesNo(sMsg, YES);
            if (nResult = YES) then
                LaunchApp(WINSYSDIR^"notepad.exe", SRCDIR^"dbstatus.txt");
            endif;                   
            abort;
        endif;
    else
        sMsg = "更新数据库出错，点“是”打开日志文件并退出安装，点“否”直接退出安装。/n";
        sMsg = sMsg+"若错误可忽略，可选择数据库类型“none”以跳过数据库更新并直接更新程序，/n";
        sMsg = sMsg+"然后在数据库中手工执行SQL脚本（安装后保存在script目录下）";
        nResult = AskYesNo(sMsg, YES);
        if (nResult = YES) then
            LaunchApp(WINSYSDIR^"notepad.exe", SRCDIR^"dbstatus.txt");
        endif;                   
        abort;
    endif;
end;

prototype SavePropertyFile(STRING,STRING,STRING);

function SavePropertyFile(szServer,szUser,szPwd)
 STRING  szFileName, szPath, szText, svLine,sInstance;
 NUMBER  nFlag, nFileHandle,nStrCount,nIndex;
 LIST   listID;

begin    
    // Create a list to store lines from the file.

    listID = ListCreate (STRINGLIST);


    // Set the file mode to normal.

    OpenFileMode (FILE_MODE_NORMAL);

    // Open the file for editing.

    OpenFile (nFileHandle, TARGETDIR^FILE_DIR, FILE_NAME);

    

    // Get lines from the file into the list.

    while (GetLine (nFileHandle, svLine) = 0)
		//判断包含服务器、用户、密码的行，并进行更新
		nStrCount=StrFind(svLine,"trs.host");
		if(nStrCount>=0) then //服务器行
		svLine=DBServer+"="+szServer;
		else 
			nStrCount=StrFind(svLine,DBUser);
			if(nStrCount>=0) then //用户名行
			svLine=DBUser+"="+szUser;
			else
			nStrCount=StrFind(svLine,DBPwd);
				if(nStrCount>=0) then //密码行
				svLine=DBPwd+"="+szPwd;
				endif;
			endif;				
		endif;
		ListAddString (listID, svLine, AFTER);
    endwhile;
    // Close the file.

    CloseFile (nFileHandle);
    //写文件
    ListWriteToFile ( listID, TARGETDIR^FILE_DIR^FILE_NAME);
    ListDestroy (listID);
 
 end;
 
